[crio]
storage_driver = "overlay2”
log_dir = "/var/log/crio/pods"

[crio.api]
listen = "/var/run/crio/crio.sock"
stream_address = "127.0.0.1"
stream_port = “10010”
# Maximum grpc send message size in bytes.
# If not set or <=0, then CRI-O will default to 16 * 1024 * 1024.
grpc_max_send_msg_size = 16777216
# Maximum grpc receive message size. If not set or <= 0, then
# CRI-O will default to 16 * 1024 * 1024.
grpc_max_recv_msg_size = 16777216

[crio.runtime]
conmon_cgroup = "pod"
cgroup_manager = "cgroupfs"
default_runtime = "runc"
default_capabilities = [
    "CHOWN",
    "DAC_OVERRIDE",
    "FSETID",
    "FOWNER",
    "NET_RAW",
    "SETGID",
    "SETUID",
    "SETPCAP",
    "NET_BIND_SERVICE",
    "SYS_CHROOT",
    "KILL",
]

default_sysctls = [
]

# Maximum number of processes allowed in a container.
pids_limit = 1024

# It must be >= 8192 to match/exceed conmon's read buffer.
# The file is truncated and re-opened so the limit is never
# exceeded.
log_size_max = -1
log_to_journald = false

[crio.runtime.runtimes.runc]
runtime_path = "/usr/bin/runc"
runtime_type = "oci"
runtime_root = "/run/runc"

[crio.image]
# Default transport for pulling images from a remote container
# storage.
default_transport = "docker://"
# The path to a file containing credentials necessary for pulling
# images from secure registries. The file is similar to that of
# /var/lib/kubelet/config.json
global_auth_file = ""
# The image used to instantiate infra containers.
# This option supports live configuration reload.
pause_image = "k8s.gcr.io/pause:3.2"
pause_image_auth_file = ""
pause_command = "/pause"
signature_policy = ""

#insecure_registries = "[]"
# Trusted registries to pull unqualified images (e.g. alpine:latest)
# from by default unqualified images are not allowed for security
# reasons
registries = []

[crio.network]
# cni_default_network = ""
network_dir = "/etc/cni/net.d/"
plugin_dirs = [
  "/opt/cni/bin",
  "/usr/libexec/cni",
]
# A necessary configuration for Prometheus based metrics
# retrieval

[crio.metrics]
# Globally enable or disable metrics support.
enable_metrics = {{ crio_enable_metrics | bool | lower }}

# The port on which the metrics server will listen.
metrics_port = {{ crio_metrics_port }}
